apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "volsync.fullname" . }}
  labels:
    control-plane: {{ include "volsync.fullname" . }}-controller
    {{- include "volsync.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      control-plane: {{ include "volsync.fullname" . }}-controller
      {{- include "volsync.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        control-plane: {{ include "volsync.fullname" . }}-controller
        {{- include "volsync.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "volsync.serviceAccountName" . }}
      # The default for podSecurityContext is moved here so that we can probe
      # the cluster and and adjust the template
      securityContext:
      {{- if empty .Values.podSecurityContext }}
        runAsNonRoot: true
        # When not OpenShift, we need to set the UID
        {{- if not (.Capabilities.APIVersions.Has "security.openshift.io/v1/SecurityContextConstraints") }}
        runAsUser: 65534
        runAsGroup: 65534
        {{- end }}
        seccompProfile:
          type: RuntimeDefault
      {{- else }}
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: kube-rbac-proxy
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
            readOnlyRootFilesystem: true
          image: "{{ include "container-image" (list . (index .Values "kube-rbac-proxy") ) }}"
          args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - "--tls-min-version=VersionTLS12"
            - --v=0
            {{- if .Values.metrics.disableAuth }}
            - --ignore-paths=/metrics
            {{- end }}
          ports:
            - containerPort: 8443
              protocol: TCP
              name: https
          resources:
            {{- toYaml (index .Values "kube-rbac-proxy-resources") | nindent 12 }}
        - name: manager
          args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
            - --rclone-container-image={{ include "container-image" (list . .Values.rclone) }}
            - --restic-container-image={{ include "container-image" (list . .Values.restic) }}
            - --rsync-container-image={{ include "container-image" (list . .Values.rsync) }}
            - --rsync-tls-container-image={{ include "container-image" (list . (index .Values "rsync-tls") ) }}
            - --syncthing-container-image={{ include "container-image" (list . .Values.syncthing) }}
            - --kopia-container-image={{ include "container-image" (list . .Values.kopia) }}
            - --scc-name=volsync-privileged-mover
            {{- if .Values.imagePullSecrets }}
            - --mover-image-pull-secrets={{ range $i, $secref := .Values.imagePullSecrets }}{{ if ne $i 0 }},{{ end }}{{ $secref.name }}{{ end }}
            {{- end }}
          command:
            - /manager
          image: "{{ include "container-image" (list . .Values.image) }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: VOLSYNC_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          volumeMounts:
            - name: tempdir
              mountPath: /tmp
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: tempdir
          emptyDir:
            medium: "Memory"
